plugins {
    id 'dev.architectury.loom' version '1.6-SNAPSHOT' apply false
    id 'architectury-plugin' version '3.4-SNAPSHOT'
    id 'com.github.johnrengelman.shadow' version '8.1.1' apply false
}

architectury {
    minecraft = project.minecraft_version
}

allprojects {
    group = rootProject.maven_group
    version = "${rootProject.minecraft_version}+${rootProject.mod_version}+${rootProject.mod_version_label}"
}

subprojects {
    apply plugin: 'dev.architectury.loom'
    apply plugin: 'architectury-plugin'
    apply plugin: 'maven-publish'

    base {
        archivesName = "$rootProject.mod_name"
    }

    repositories {
        mavenCentral() {
            content {
                includeGroup 'org.projectlombok'
            }
        }
        maven { url 'https://maven.nova-committee.cn/releases' }
        maven { url 'https://maven.minecraftforge.net/' }
        maven { url 'https://maven.parchmentmc.org' }
        maven { url "https://maven.shedaniel.me/" }
        maven { url "https://maven.terraformersmc.com/releases/" }
    }

    dependencies {
        minecraft "net.minecraft:minecraft:$rootProject.minecraft_version"
        mappings loom.layered() {
            officialMojangMappings()
            parchment("org.parchmentmc.data:parchment-$minecraft_version:$mappings_version@zip")
        }
        implementation ("org.yaml:snakeyaml:1.28")

    }

    java {
        // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
        // if it is present.
        // If you remove this line, sources will not be generated.
        withSourcesJar()

        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    tasks.withType(JavaCompile).configureEach {
        it.options.release = 17
    }

    tasks.withType(ProcessResources).configureEach {

        var replaceProperties = [
                'mod_version'                  : mod_version,
                "minecraft_version"            : minecraft_version,
                "forge_version"                : forge_version,
                "forge_loader_version_range"   : forge_loader_version_range,
                "forge_version_range"          : forge_version_range,
                "minecraft_version_range"      : minecraft_version_range,
                "fabric_api_version"           : fabric_api_version,
                "fabric_loader_version"        : fabric_loader_version,
                "mod_name"                     : mod_name,
                "mod_author"                   : mod_author,
                "mod_id"                       : mod_id,
                "license"                      : license,
                "description"                  : project.description,
                "neoforge_version"             : neoforge_version,
                "neoforge_loader_version_range": neoforge_loader_version_range,
                "credits"                      : credits
        ]

        inputs.properties replaceProperties

        filesMatching(['META-INF/*mods.toml', 'fabric.mod.json', 'pack.mcmeta']) {
            expand replaceProperties
        }
    }

    tasks.withType(Jar).configureEach {
        manifest {
            attributes([
                    'Specification-Title'   : mod_id,
                    'Specification-Vendor'  : mod_author,
                    'Specification-Version' : '1',
                    'Implementation-Title'  : rootProject.name,
                    'Implementation-Version': jar.archiveVersion,
                    'Implementation-Vendor' : mod_author
            ])
        }
    }
}