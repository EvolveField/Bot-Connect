apply(plugin: "dev.architectury.loom")
apply(plugin: "com.replaymod.preprocess")
apply(plugin: "dev.vankka.dependencydownload.plugin")
apply(plugin: "maven-publish")

int mcVersion = 1

preprocess {
    mcVersion = vars.get()["MC"]
    tabIndentation = true
}


repositories {
    maven { url = "https://maven.nova-committee.cn/releases" }
    maven { url =  "https://api.modrinth.com/maven" }
    mavenCentral()
}
//jar.dependsOn generateRuntimeDownloadResourceForRuntimeDownload

dependencies {
    minecraft ("com.mojang:minecraft:${minecraft_version}")
    mappings loom.officialMojangMappings()

    modImplementation ("net.fabricmc:fabric-loader:${loader_version}")
    modImplementation ("net.fabricmc.fabric-api:fabric-api:${fabric_version}")
    modImplementation include("dev.vankka:dependencydownload-runtime:1.3.1") {exclude module: 'jar-relocator'}
    modImplementation include("dev.vankka:dependencydownload-common:1.3.1")
    implementation ("cn.evole.onebot:OneBot-Client:${onebot_client_version}"){transitive = false}
    implementation ("cn.evole.config:AtomConfig-Toml:${toml_version}"){transitive = false}

    if (mcVersion == 11605) include ("org.slf4j:slf4j-api:2.0.7")
    modCompileOnly ("maven.modrinth:vanish:1.5.2-1.20.1")
    compileOnly ("org.projectlombok:lombok:1.18.24")
    annotationProcessor ("org.projectlombok:lombok:1.18.24")

}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = "https://maven.pkg.github.com/octocat/hello-world"
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }
}

loom {
    runConfigs.all {
        ideConfigGenerated = true
        runDir "../../run"
    }
}



loom {
    silentMojangMappingsLicense()
    mixin {
        useLegacyMixinAp = false
    }
}

remapJar {
    remapperIsolation = true
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

version = mod_version
group = maven_group
archivesBaseName = archives_base_name + "-" + minecraft_dependency

tasks.withType(ProcessResources).configureEach {
    def replaceProperties = [
            "mc_version"          : minecraft_dependency.replace(".", "_"),
            "version"             : mod_version,
            "minecraft_dependency": minecraft_dependency
    ]
    inputs.properties replaceProperties

    filesMatching(["fabric.mod.json"]) {
        expand replaceProperties + [project: project]
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = "UTF-8"
}

jar {
    from("../../../LICENSE") {
        rename { "${it}_${archives_base_name}" }
    }
}