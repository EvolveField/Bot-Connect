plugins {
    id 'com.github.johnrengelman.shadow'
}

println "Forge: $forge_version"

architectury {
    platformSetupLoomIde()
    forge()
}

loom {
    forge {
        mixinConfig  "${mod_id}.mixins.json"
    }
}

configurations {
    common {
        canBeResolved = true
        canBeConsumed = false
    }
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentForge.extendsFrom common

    shadowBundle {
        canBeResolved = true
        canBeConsumed = false
    }
}

dependencies {
    forge "net.minecraftforge:forge:$rootProject.minecraft_version-$rootProject.forge_version"

    common(project(path: ':common', configuration: 'namedElements')) { transitive false }
    shadowBundle(project(path: ':common', configuration: 'transformProductionForge'))

    forgeRuntimeLibrary(implementation(shadowBundle("cn.evole.onebot:OneBot-Client:$onebot_client_version"){transitive = false}))
    forgeRuntimeLibrary(implementation(shadowBundle("com.github.houbb:csv:0.2.0")))
    modImplementation include("curse.maven:jupiter-1072905:$jupiter_forge_version")

}

shadowJar {
    configurations = [project.configurations.shadowBundle]
    archiveClassifier = "dev-shadow"

    relocate 'org.yaml', 'cn.evole.dependencies.yaml'
    relocate 'org.spongepowered.configurate', 'cn.evole.dependencies.spongepowered.configurate'
    relocate 'io.leangen', 'cn.evole.dependencies.leagen'
    relocate 'org.checkerframework', 'cn.evole.dependencies.checkerframework'
    relocate 'com.google.errorprone', 'cn.evole.dependencies.errorprone'
    relocate 'org.apiguardian', 'cn.evole.dependencies.apiguardian'
    relocate 'com.github.houbb', 'cn.evole.dependencies.houbb'
}

remapJar {
    input.set shadowJar.archiveFile
    archiveClassifier = "forge"
}

jar {
    archiveClassifier.set("dev")
}


